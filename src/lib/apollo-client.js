// // lib/apollo-client.js - –û–ë–ù–û–í–õ–ï–ù–û –î–õ–Ø APOLLO CLIENT 4.0
// import { 
//   ApolloClient, 
//   InMemoryCache,
//   HttpLink,  // –ù–û–í–´–ô –ò–ú–ü–û–†–¢ - –∫–ª–∞—Å—Å –≤–º–µ—Å—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏
//   ApolloLink 
// } from '@apollo/client';
// import { onError } from '@apollo/client/link/error';

// // HTTP Link —Å –Ω–æ–≤—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º Apollo 4.0
// const httpLink = new HttpLink({  // new HttpLink() –≤–º–µ—Å—Ç–æ createHttpLink()
//   uri: process.env.NEXT_PUBLIC_WORDPRESS_GRAPHQL_URL || 'http://localdev.test:8080/graphql',
//   // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è WordPress
//   headers: {
//     'Content-Type': 'application/json',
//   },
// });

// // Error Link –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
// const errorLink = onError(({ graphQLErrors, networkError, operation, forward }) => {
//   if (graphQLErrors) {
//     graphQLErrors.forEach(({ message, locations, path }) => {
//       console.error(
//         `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`
//       );
//     });
//   }

//   if (networkError) {
//     console.error(`[Network error]: ${networkError}`);
    
//     // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è WordPress –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
//     if (networkError.code === 'ECONNREFUSED') {
//       console.warn('üîÑ WordPress —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω –Ω–∞:', 
//         process.env.NEXT_PUBLIC_WORDPRESS_GRAPHQL_URL);
//     }
//   }
// });

// // –°–æ–∑–¥–∞–µ–º Apollo Client —Å –Ω–æ–≤—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º Apollo 4.0
// const client = new ApolloClient({
//   link: ApolloLink.from([errorLink, httpLink]), // ApolloLink.from() –≤–º–µ—Å—Ç–æ from()
//   cache: new InMemoryCache({
//     typePolicies: {
//       Page: {
//         fields: {
//           heroFields: {
//             merge: true,
//           },
//           contentFields: {
//             merge: true,
//           }
//         }
//       }
//     }
//   }),
//   defaultOptions: {
//     watchQuery: {
//       errorPolicy: 'all',
//     },
//     query: {
//       errorPolicy: 'all',
//     },
//   },
//   // –î–ª—è SSR –≤ Next.js
//   ssrMode: typeof window === 'undefined',
// });

// export default client;
